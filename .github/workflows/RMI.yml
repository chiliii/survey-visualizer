name: rmi

on:
  workflow_dispatch:
    branches: [main]

env:
  CONFIG_FILE_PATH: ./src/config.yaml
  IMAGE_REPO: registry.heroku.com
  APP_NAME: rmi-hri
  HEROKU_PROCESS_TYPE: web
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  NEW_CONFIG_FILE: rmi.yaml

jobs:
  setup-build-push-deploy:
    name: Setup, Build, Push, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OS packages
        run: |
          sudo apt update
          sudo apt install -y nodejs npm curl python3-pip python3-setuptools
          node -v
          sudo npm install -g n
          sudo n 14.15.1
          node -v
          pip3 install pip3 --upgrade
          sudo npm install -g yarn
          sudo npm install -g newman
          pip3 install pyOpenSSL --upgrade
          pip3 install --upgrade --no-cache-dir huggingface-hub
          pip3 install --no-cache-dir -r "requirements.txt"
          pip3 install --no-cache-dir setuptools Levenshtein
      - name: Edit app configuration
        env:
          SLUG_FILE_PATH_PATTERN: ./src/compiler/data
          SLUG_FILE_PATH_PATTERN_TO_REPLACE_WITH: ./slug.xlsx
          PDF_FOLDER_PATH_PATTERN: ./src/compiler
          PDF_FOLDER_PATH_PATTERN_TO_REPLACE_WITH: ./pdfs
          WORKSHEET_PATTERN: "active_worksheet: main"
          WORKSHEET_PATTERN_TO_REPLACE_WITH: "active_worksheet: slug"
        run: |
          sed -e "s/${SLUG_FILE_PATH_PATTERN}/${SLUG_FILE_PATH_PATTERN_TO_REPLACE_WITH}/g" -e "s/${PDF_FOLDER_PATH_PATTERN}/${PDF_FOLDER_PATH_PATTERN_TO_REPLACE_WITH}/g" -e "s/${WORKSHEET_PATTERN}/${WORKSHEET_PATTERN_TO_REPLACE_WITH}/g" $CONFIG_FILE_PATH > $NEW_CONFIG_FILE
      - name: Generate build sources
        run: python src/compiler/compile.py --file $NEW_CONFIG_FILE
      - name: Install node dependencies
        run: |
          yarn install --ignore-engines
      - name: Build app
        env:
          CI: ""
        run: yarn build
      - name: Build docker image
        env:
          Dockerfile_PATH: Dockerfile.heroku
        run: docker build -f $Dockerfile_PATH -t $IMAGE_REPO/$APP_NAME/$HEROKU_PROCESS_TYPE .
      - name: Setup Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku container:login
      - name: Push docker image
        run: docker push $IMAGE_REPO/$APP_NAME/$HEROKU_PROCESS_TYPE
      - name: Update container image
        run: |
          heroku container:release $HEROKU_PROCESS_TYPE -a $APP_NAME
